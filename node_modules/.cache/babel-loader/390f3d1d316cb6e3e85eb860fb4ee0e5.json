{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/environment/treasure-hunt-jon-brian/src/Components/Board.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport Square from './Square.js';\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.treasure = () => {\n      let arr = this.state.spaces;\n      let num = Math.floor(Math.random() * arr.length - 1);\n      return this.setState({\n        treasure: num\n      });\n    };\n\n    this.handleClick = squareIndex => {\n      let arr = this.state.spaces;\n      arr[squareIndex] = \"tree\";\n      this.setState({\n        spaces: arr\n      });\n\n      if (this.state.treasure == squareIndex) {\n        alert(\"you win\");\n      }\n    };\n\n    this.state = {\n      spaces: [\"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\"],\n      treasure: 0\n    };\n  }\n\n  render() {\n    let square = this.state.spaces.map((value, index) => {\n      return React.createElement(Square, {\n        key: index,\n        index: index,\n        value: value,\n        handleClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      id: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, square);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/home/ubuntu/environment/treasure-hunt-jon-brian/src/Components/Board.js"],"names":["React","Component","Square","Board","constructor","props","treasure","arr","state","spaces","num","Math","floor","random","length","setState","handleClick","squareIndex","alert","render","square","map","value","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA6B;AACzBG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAOlBC,QAPkB,GAOP,MAAK;AACZ,UAAIC,GAAG,GAAG,KAAKC,KAAL,CAAWC,MAArB;AACA,UAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,GAAG,CAACO,MAApB,GAA4B,CAAvC,CAAV;AACA,aAAO,KAAKC,QAAL,CAAc;AAACT,QAAAA,QAAQ,EAAEI;AAAX,OAAd,CAAP;AACH,KAXiB;;AAAA,SAalBM,WAbkB,GAaHC,WAAD,IAAgB;AAC1B,UAAIV,GAAG,GAAG,KAAKC,KAAL,CAAWC,MAArB;AACAF,MAAAA,GAAG,CAACU,WAAD,CAAH,GAAmB,MAAnB;AACA,WAAKF,QAAL,CAAc;AAACN,QAAAA,MAAM,EAAEF;AAAT,OAAd;;AACA,UAAG,KAAKC,KAAL,CAAWF,QAAX,IAAqBW,WAAxB,EAAoC;AAChCC,QAAAA,KAAK,CAAE,SAAF,CAAL;AACH;AACJ,KApBiB;;AAEd,SAAKV,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,CAAV;AACEH,MAAAA,QAAQ,EAAE;AADZ,KAAb;AAGH;;AAgBDa,EAAAA,MAAM,GAAE;AAEJ,QAAIC,MAAM,GAAG,KAAKZ,KAAL,CAAWC,MAAX,CAAkBY,GAAlB,CAAsB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACrD,aACI,oBAAC,MAAD;AACI,QAAA,GAAG,EAAEA,KADT;AAEI,QAAA,KAAK,EAAEA,KAFX;AAGI,QAAA,KAAK,EAAED,KAHX;AAII,QAAA,WAAW,EAAE,KAAKN,WAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAQC,KATY,CAAb;AAUA,WACI;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBI,MAAhB,CADJ;AAGH;;AArCwB;;AAuC7B,eAAejB,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css'\nimport Square from './Square.js'\n\nclass Board extends Component{\n    constructor(props){\n        super(props)\n        this.state = { spaces: [\"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\"], \n                       treasure: 0\n        }\n    }\n    \n    treasure = () =>{\n        let arr = this.state.spaces\n        let num = Math.floor(Math.random() * arr.length -1)\n        return this.setState({treasure: num})\n    }\n    \n    handleClick = (squareIndex) =>{\n        let arr = this.state.spaces\n        arr[squareIndex] = \"tree\"\n        this.setState({spaces: arr})\n        if(this.state.treasure==squareIndex){\n            alert (\"you win\")\n        }\n    }\n    render(){\n        \n        let square = this.state.spaces.map((value, index) => {\n        return(\n            <Square\n                key={index}\n                index={index}\n                value={value}\n                handleClick={this.handleClick}\n            />\n             )   \n        })\n        return(\n            <div id=\"grid\">{square}</div>\n        )\n    }\n}\nexport default Board"]},"metadata":{},"sourceType":"module"}